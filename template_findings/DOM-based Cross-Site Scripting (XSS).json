[{"id": 152, "title": "DOM-based Cross-Site Scripting (XSS)", "damage": 1, "reproducability": 1, "exploitability": 1, "affected_users": 1, "discoverability": 1, "dread_total": 5, "effort": null, "type": "Imported", "overview": "<paragraph>Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.<paragraph></paragraph>Unlike traditional Cross-Site Scripting (XSS), where the client is able to inject scripts into a request and have the server return the script to the client, DOM XSS does not require that a request be sent to the server and may be abused entirely within the loaded page.<paragraph></paragraph>This occurs when elements of the DOM (known as the sources) are able to be manipulated to contain untrusted data, which the client-side scripts (known as the sinks) use or execute an unsafe way.</paragraph>", "poc": null, "remediation": "<paragraph>Client-side document rewriting, redirection, or other sensitive action, using untrusted data, should be avoided wherever possible, as these may not be inspected by server side filtering.<paragraph></paragraph>To remedy DOM XSS vulnerabilities where these sensitive document actions must be used, it is essential to:\n 1. Ensure any untrusted data is treated as text, as opposed to being interpreted as code or mark-up within the page.\n 2. Escape untrusted data prior to being used within the page. Escaping methods will vary depending on where the untrusted data is being used. (See references for details.)\n 3. Use 'document.createElement', 'element.setAttribute', 'element.appendChild', etc. to build dynamic interfaces as opposed to HTML rendering methods such as 'document.write', 'document.writeIn', 'element.innerHTML', or 'element.outerHTML 'etc.\n</paragraph>", "references": "<paragraph>VulnDB: https://github.com/vulndb/data</paragraph><paragraph>http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting</paragraph><paragraph>https://www.owasp.org/index.php/DOM_based_XSS_Prevention_Cheat_Sheet</paragraph><paragraph>https://www.owasp.org/index.php/DOM_Based_XSS</paragraph>", "approved": true, "risk": 4, "affected_hosts": null, "av": null, "ac": null, "au": null, "c": null, "i": null, "a": null, "e": null, "rl": null, "rc": null, "cdp": null, "td": null, "cr": null, "ir": null, "ar": null, "cvss_base": null, "cvss_impact": null, "cvss_exploitability": null, "cvss_temporal": null, "cvss_environmental": null, "cvss_modified_impact": null, "cvss_total": null, "ease": null, "c2_vs": null, "attack_vector": null, "attack_complexity": null, "privileges_required": null, "user_interaction": null, "scope_cvss": null, "confidentiality": null, "integrity": null, "availability": null, "exploit_maturity": null, "remeditation_level": null, "report_confidence": null, "confidentiality_requirement": null, "integrity_requirement": null, "availability_requirement": null, "mod_attack_vector": null, "mod_attack_complexity": null, "mod_privileges_required": null, "mod_user_interaction": null, "mod_scope": null, "mod_confidentiality": null, "mod_integrity": null, "mod_availability": null, "cvss_base_score": null, "cvss_impact_score": null, "cvss_mod_impact_score": null, "c3_vs": null, "severity": null, "likelihood": null, "severity_rationale": null, "likelihood_rationale": null, "nist_impact": null, "nist_likelihood": null, "nist800_total": null, "impact_val": null, "likelihood_val": null, "nist_rating": null, "language": null}]